services:
  # MariaDB Database
  mariadb:
    image: mariadb:10.11
    container_name: dating-app-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_NAME:-tweetheart}
      MYSQL_USER: ${DB_USER:-appuser}
      MYSQL_PASSWORD: ${DB_PASSWORD:-apppassword}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      # Database initialization script
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Backend Service
  backend:
    build:
      context: .  # Build from root to access both backend and src
      dockerfile: backend/Dockerfile
    container_name: dating-app-backend
    restart: unless-stopped
    environment:
      # Server Configuration
      SERVER_PORT: 8081
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
      
      # Database Configuration
      DB_HOST: mariadb
      DB_USER: ${DB_USER:-appuser}
      DB_PASSWORD: ${DB_PASSWORD:-apppassword}
      DB_NAME: ${DB_NAME:-tweetheart}
      DB_PORT: 3306
      
      # Application Secrets
      ACCESS_TOKEN_SECRET: ${ACCESS_TOKEN_SECRET}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      
      # Email Configuration
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      
      # AWS S3 Configuration
      BUCKET_NAME: ${BUCKET_NAME}
      BUCKET_REGION: ${BUCKET_REGION}
      ACCESS_KEY: ${ACCESS_KEY}
      SECRET_ACCESS_KEY: ${SECRET_ACCESS_KEY}
    ports:
      - "8081:8081"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - app-network

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Frontend API URL - empty string uses relative paths (via Nginx proxy)
        # Or set to http://your-server-ip/api to include /api prefix
        VITE_API_URL: ${VITE_API_URL:-/api}
    container_name: dating-app-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"  # For HTTPS if configured
    # volumes:
      # SSL certificates (for production - uncomment when deploying with SSL)
      # - /etc/letsencrypt:/etc/letsencrypt:ro
      # - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - backend
    networks:
      - app-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: dating-app-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: ${DB_USER:-appuser}
      PMA_PASSWORD: ${DB_PASSWORD:-apppassword}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      UPLOAD_LIMIT: 20M
    ports:
      - "8080:80"  # Access phpMyAdmin at http://your-domain:8080 or https://your-domain:8080
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - app-network

volumes:
  mariadb_data:
    driver: local

networks:
  app-network:
    driver: bridge

